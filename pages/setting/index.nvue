<template>
	<view>
		<!-- <image class="logo" src="/static/logo.png"></image>
		<view class="text-area">
			<text class="title">{{title}}</text>
		</view> -->

		<Login v-if="!isLogin"></Login>
		<view v-if="isLogin">
			<!-- <uni-list-item
				v-if="isLogin"
				title="ZeroS" 
				note="列表描述信息" 
				showArrow 
				:thumb="this.$store.state.userProfile.avatar"
				thumb-size="lg" 
				rightText=""
				style=";"
				link
				
			/> -->
			<uni-list-item
				link="true"
				showArrow="false"
			>
				<view slot="header" class="slot-box">
					<image class="slot-image" :src="getUserProfile.avatar?getUserProfile.avatar:'/static/logo.png'" mode="widthFix"></image>
				</view>
				<text slot="body" class="slot-box slot-text">{{getUserProfile.nick?getUserProfile.nick:getUserProfile.userID}}</text>
			</uni-list-item>
			
			<uni-list-item link title="个人信息" @click="showUserProfile()" style="margin-top: 50rpx;" ></uni-list-item>
			<uni-list-item link title="退出登录" @click="logout()" ></uni-list-item>
		</view>

	</view>
</template>

<script>
	// 引入组件
	import Login from "@/components/login/login.nvue"
	export default {
		components: {
			Login
		},
		data() {
			return {
				userProfile:{}
			}
		},
		onLoad() {
			// this.getStorage('isLogin')
			uni.showModal({
				title: 'test',
				content: this.$store.state.isLogin,
				showCancel:false
			})

		},
		// onShow() {
		// 	this.userProfile = this.$store.state.userProfile
		// },
		computed: {
			isLogin(){
				return this.$store.state.isLogin;
			},
			getUserProfile(){
				return this.$store.state.userProfile
			}
		},
		watch: {
			isLogin(){
				uni.setNavigationBarTitle({
				    title: this.$store.state.isLogin?"我的":"登录"
				});
			},
		},
		methods: {
			logout: function () {
				let promise = this.Tim.logout();
				promise.then((imResponse)=> {
					this.$store.commit('changeLoginState',false)
				  console.log(imResponse.data); // 登出成功
				}).catch((imError)=> {
					this.$store.commit('changeLoginState',false)
				  console.warn('logout error:', imError);
				});
			},
			showUserProfile: function () {
				console.log(this.$store.state.userProfile)
			},
			getStorage: function (key) {
				if (key.length === 0) {
					uni.showModal({
						title: '读取数据失败',
						content: "key 不能为空",
						showCancel:false
					})
				} else {
					uni.getStorage({
						key: key,
						success: (res) => {
							uni.showModal({
								title: '读取数据成功',
								content: "data: '" + res.data + "'",
								showCancel:false
							})
						},
						fail: () => {
							uni.showModal({
								title: '读取数据失败',
								content: "找不到 key 对应的数据",
								showCancel:false
							})
						}
					})
				}
			},
			setStorage: function () {
				var key = this.key
				var data = this.data
				if (key.length === 0) {
					uni.showModal({
						title: '保存数据失败',
						content: 'key 不能为空',
						showCancel:false
					})
				} else {
					uni.setStorage({
						key: key,
						data: data,
						success: (res) => {
							uni.showModal({
								title: '存储数据成功',
								content: JSON.stringify(res.errMsg),
								showCancel:false
							})
						},
						fail: () => {
							uni.showModal({
								title: '储存数据失败!',
								showCancel:false
							})
						}
					})
				}
			},
		}
	}
</script>

<style>
	.content {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}

	.logo {
		height: 200rpx;
		width: 200rpx;
		margin-top: 200rpx;
		margin-left: auto;
		margin-right: auto;
		margin-bottom: 50rpx;
	}

	.text-area {
		display: flex;
		justify-content: center;
	}

	.title {
		font-size: 36rpx;
		color: #8f8f94;
	}

	.slot-box {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}

	.slot-image {
		/* #ifndef APP-NVUE */
		display: block;
		/* #endif */
		margin-right: 15px;
		width: 40px;
		height: 40px;
	}

	.slot-text {
		flex: 1;
		font-size: 15px;
		font-weight: bold;
		/* color: #4cd964; */
		margin-right: 10px;
	}

</style>
